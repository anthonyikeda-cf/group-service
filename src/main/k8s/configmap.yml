apiVersion: v1
kind: ConfigMap
metadata:
  name: groups-config
data:
  prometheus.yml: |
    # my global config
    global:
      scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).

    # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
    rule_files:
    # - "first_rules.yml"
    # - "second_rules.yml"

    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'
        # metrics_path defaults to '/metrics'
        # scheme defaults to 'http'.
        static_configs:
          - targets: ['127.0.0.1:9090']

      - job_name: 'consul'
        metrics_path: "/v1/sgent/metrics"
        scrape_interval: 5s
        params:
          format: ['prometheus']
        static_configs:
          - targets: ['consul:8600']

      - job_name: 'vault'
        metrics_path: "/v1/sys/metrics"
        scrape_interval: 5s
        params:
          format: ['prometheus']
        bearer_token: ''
        static_configs:
          - targets: ['vault-svc:8200']

      - job_name: 'groups'
        metrics_path: '/actuator/prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['group-service:8080']

  vault_config: |
    storage " consul" {
      address = "consul-svc:8500"
      path = "vault
    }

    listener "tcp" {
      address = "vault-svc:8200
      tls_disable = 1
    }

    telemetry {
      prometheus_retention_time = "30s",
      disable_hostname = true
    }
  consul_config: |
    {
      "datacenter" : "central-gc",
      "data_dir" : "/consul/data",
      "log_level" : "INFO",
      "node_name" : "grousp-consul",
      "server" : true,
      "telemetry" : {
        "prometheus_retention_time" : "30s"
      }
    }